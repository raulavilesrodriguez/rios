{"version":3,"sources":["services/rivers.js","components/RiverInformation.js"],"names":["rivers","nilo","id","name","continent","length","outflow","amazonas","yangtze","mississippi","RiverInformation","props","useState","riverInformation","setRiverInformation","useEffect","mounted","Promise","resolve","setTimeout","then","data"],"mappings":"mMAAMA,EAAS,CACXC,KAAM,CACJC,GAAI,EACJC,KAAM,OACNC,UAAW,YACXC,OAAQ,WACRC,QAAS,mBAEXC,SAAU,CACRL,GAAI,EACJC,KAAM,WACNC,UAAW,iBACXC,OAAQ,WACRC,QAAS,0BAEXE,QAAS,CACPN,GAAI,EACJC,KAAM,UACNC,UAAW,OACXC,OAAQ,WACRC,QAAS,qBAEXG,YAAa,CACXP,GAAI,EACJC,KAAM,cACNC,UAAW,mBACXC,OAAQ,WACRC,QAAS,uBCvBA,SAASI,EAAiBC,GAAQ,IAAD,EACEC,mBAAS,IADX,mBACrCC,EADqC,KACnBC,EADmB,KAiB9C,OAdEC,qBAAU,WACR,IDuB8BZ,ECvB1Ba,GAAU,EAOZ,ODgB4Bb,ECtBRQ,EAAMR,KDuBvB,IAAIc,SAAQ,SAACC,GAClBC,YAAW,WACTD,EACIlB,EAAOG,MAEV,SC3BAiB,MAAK,SAAAC,GACDL,GACDF,EAAoBO,MAGlB,WACJL,GAAQ,KAEX,CAACL,EAAMR,OAIV,8BACI,+BACI,mEAAyBU,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAkBV,QAC3C,qDAAiBU,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAkBT,aACnC,mDAAeS,QAAf,IAAeA,OAAf,EAAeA,EAAkBR,UACjC,iDAAaQ,QAAb,IAAaA,OAAb,EAAaA,EAAkBP,aAJ1BO,EAAiBX","file":"static/js/RiverInformation.09948c14.chunk.js","sourcesContent":["const rivers = {\r\n    nilo: {\r\n      id: 1,\r\n      name: 'Nilo',\r\n      continent: 'África',\r\n      length: '6,650 km',\r\n      outflow: 'Mediterráneo'\r\n    },\r\n    amazonas: {\r\n      id: 2,\r\n      name: 'Amazonas',\r\n      continent: 'Sur América',\r\n      length: '6,575 km',\r\n      outflow: 'Océano Atlántico'\r\n    },\r\n    yangtze: {\r\n      id: 3,\r\n      name: 'Yangtze',\r\n      continent: 'Asia',\r\n      length: '6,300 km',\r\n      outflow: 'Mar Este de China'\r\n    },\r\n    mississippi: {\r\n      id: 4,\r\n      name: 'Mississippi',\r\n      continent: 'Norte América',\r\n      length: '6,275 km',\r\n      outflow: 'Golfo de México'\r\n    }\r\n   }\r\n\r\nexport function getRiverInformation(name) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve(\r\n            rivers[name]\r\n        )\r\n      }, 1000)\r\n    })\r\n  }","import React, {useState, useEffect} from 'react';\r\nimport {getRiverInformation} from '../services/rivers'\r\n\r\n\r\nexport default function RiverInformation(props) {\r\n    const [riverInformation, setRiverInformation]=useState({});\r\n    \r\n    useEffect(()=>{\r\n      let mounted = true;\r\n        getRiverInformation(props.name)\r\n        .then(data=>{\r\n          if(mounted){\r\n            setRiverInformation(data)\r\n          }   \r\n        });\r\n        return()=>{\r\n          mounted=false;\r\n        }\r\n    }, [props.name])\r\n    \r\n    \r\n  return(\r\n    <div>\r\n        <ul key={riverInformation.id}>\r\n            <h2>Información de Ríos {riverInformation?.name}</h2>\r\n            <li>Continente: {riverInformation?.continent}</li>\r\n            <li>Longitud: {riverInformation?.length}</li>\r\n            <li>Salida: {riverInformation?.outflow}</li>\r\n      </ul>\r\n    </div> \r\n  )\r\n}\r\n\r\n"],"sourceRoot":""}